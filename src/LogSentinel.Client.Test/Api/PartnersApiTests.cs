/* 
 * LogSentinel RESTful API
 *
 * Read more at https://docs.logsentinel.com/en/latest/index.html
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using LogSentinel.Client.Client;
using LogSentinel.Client.Api;
using LogSentinel.Client.Model;

namespace LogSentinel.Client.Test
{
    /// <summary>
    ///  Class for testing PartnersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PartnersApiTests
    {
        private PartnersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PartnersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PartnersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PartnersApi
            //Assert.IsInstanceOfType(typeof(PartnersApi), instance, "instance is a PartnersApi");
        }

        
        /// <summary>
        /// Test CancelOrganization
        /// </summary>
        [Test]
        public void CancelOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? organizationId = null;
            //instance.CancelOrganization(organizationId);
            
        }
        
        /// <summary>
        /// Test FetchAllOrganizations
        /// </summary>
        [Test]
        public void FetchAllOrganizationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.FetchAllOrganizations();
            //Assert.IsInstanceOf<List<Guid?>> (response, "response is List<Guid?>");
        }
        
        /// <summary>
        /// Test GetApiCredentials
        /// </summary>
        [Test]
        public void GetApiCredentialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetApiCredentials();
            //Assert.IsInstanceOf<Dictionary<string, List<APICredentialsOrganization>>> (response, "response is Dictionary<string, List<APICredentialsOrganization>>");
        }
        
        /// <summary>
        /// Test GetOrganizationByUserEmail
        /// </summary>
        [Test]
        public void GetOrganizationByUserEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //var response = instance.GetOrganizationByUserEmail(email);
            //Assert.IsInstanceOf<OrganizationDto> (response, "response is OrganizationDto");
        }
        
        /// <summary>
        /// Test GetUserIdByEmail
        /// </summary>
        [Test]
        public void GetUserIdByEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //var response = instance.GetUserIdByEmail(email);
            //Assert.IsInstanceOf<Guid?> (response, "response is Guid?");
        }
        
        /// <summary>
        /// Test RegisterUser
        /// </summary>
        [Test]
        public void RegisterUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserRegistrationRequest request = null;
            //var response = instance.RegisterUser(request);
            //Assert.IsInstanceOf<RegistrationResponse> (response, "response is RegistrationResponse");
        }
        
    }

}
