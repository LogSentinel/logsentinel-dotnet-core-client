/* 
 * LogSentinel RESTful API
 *
 * Read more at https://docs.logsentinel.com/en/latest/index.html
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using LogSentinel.Client.Client;
using LogSentinel.Client.Api;

namespace LogSentinel.Client.Test
{
    /// <summary>
    ///  Class for testing HashApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class HashApiTests
    {
        private HashApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new HashApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of HashApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' HashApi
            //Assert.IsInstanceOfType(typeof(HashApi), instance, "instance is a HashApi");
        }

        
        /// <summary>
        /// Test GetHash
        /// </summary>
        [Test]
        public void GetHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //Guid? entryId = null;
            //var response = instance.GetHash(applicationId, entryId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetHashableContent
        /// </summary>
        [Test]
        public void GetHashableContentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //string action = null;
            //string actorId = null;
            //string auditLogEntryType = null;
            //string signature = null;
            //string actorDepartment = null;
            //string actorDisplayName = null;
            //List<string> actorRoles = null;
            //string details = null;
            //string logLevel = null;
            //long? originalEventTimestamp = null;
            //var response = instance.GetHashableContent(applicationId, action, actorId, auditLogEntryType, signature, actorDepartment, actorDisplayName, actorRoles, details, logLevel, originalEventTimestamp);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetHashableContentForAuthAction
        /// </summary>
        [Test]
        public void GetHashableContentForAuthActionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //string actorId = null;
            //string authAction = null;
            //string signature = null;
            //string signedLoginChallenge = null;
            //string userPublicKey = null;
            //string actorDepartment = null;
            //string actorDisplayName = null;
            //List<string> actorRoles = null;
            //string details = null;
            //long? originalEventTimestamp = null;
            //var response = instance.GetHashableContentForAuthAction(applicationId, actorId, authAction, signature, signedLoginChallenge, userPublicKey, actorDepartment, actorDisplayName, actorRoles, details, originalEventTimestamp);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetHashableContentForStandardAction
        /// </summary>
        [Test]
        public void GetHashableContentForStandardActionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //string action = null;
            //string actorId = null;
            //string entityId = null;
            //string entityType = null;
            //string auditLogEntryType = null;
            //string signature = null;
            //string actorDepartment = null;
            //string actorDisplayName = null;
            //List<string> actorRoles = null;
            //string details = null;
            //string logLevel = null;
            //long? originalEventTimestamp = null;
            //var response = instance.GetHashableContentForStandardAction(applicationId, action, actorId, entityId, entityType, auditLogEntryType, signature, actorDepartment, actorDisplayName, actorRoles, details, logLevel, originalEventTimestamp);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetHashableContentSimple
        /// </summary>
        [Test]
        public void GetHashableContentSimpleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //string auditLogEntryType = null;
            //string signature = null;
            //string details = null;
            //string logLevel = null;
            //long? originalEventTimestamp = null;
            //var response = instance.GetHashableContentSimple(applicationId, auditLogEntryType, signature, details, logLevel, originalEventTimestamp);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
